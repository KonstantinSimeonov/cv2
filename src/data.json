{
    "personalInfo": {
        "names": {
            "first": "Konstantin",
            "middle": "Simeonov",
            "last": "Simeonov"
        },
        "title": "Software dev and haskell/linux hobbyist",
        "photoUrl": "target/web/public/main/konche-bonche.jpg",
        "aboutMe": "Located in Sofia, Bulgaria, currently busy with mentoring 2 people, creating challenges for geektastic.com and reading the Designing Data Intensive Applications book.",
        "contacts": [
            {
                "url": "https://github.com/KonstantinSimeonov",
                "text": "github",
                "urlType": "url"
            },
            {
                "url": "https://www.hackerrank.com/kon_trombon",
                "text": "hackerrank",
                "urlType": "url"
            },
            {
                "url": "tel:+359 885 032 502",
                "text": "+359 885 032 502",
                "urlType": "phone"
            },
            {
                "url": "mailto:kon.simeonov@protonmail.com",
                "text": "kon.simeonov@protonmail.com",
                "urlType": "email"
            }
        ]
    },
    "workExperience": [
        {
            "from": "December 2015",
            "to": "January 2017",
            "jobTitle": "Technical Trainer",
            "location": "Telerik Academy",
            "descriptions": [
                "Delivered lectures that helped more than 2000 students on their journey from beginner to juniour in web development with C#, HTML, CSS and JavaScript",
                "Created exam programming problems for topics like algorithms, javascript DOM and programming fundamentals, organized exams and lectures",
                "Experienced firsthand how important keeping deadlines is, became better at taking responsibilities and honed organizational skills"
            ]
        },
        {
            "from": "April 2017",
            "to": "July 2019",
            "jobTitle": "JavaScript Developer",
            "location": "Chaosgroup",
            "descriptions": [
                "Worked on V-Ray for Sketchup/Rhino/Revit, which provides a cross-platform UI for interacting with V-Ray",
                "Built dynamic user interfaces using Electron, React, Typescript, Mobx and Redux",
                "Set up unit and e2e test environments with Mocha/Ava/Jest, implemented builds with Webpack, Gitlab/Jenkins CI/CD for apps and libraries"
            ]
        },
        {
            "from": "July 2019",
            "to": "January 2020",
            "jobTitle": "Scala Developer",
            "location": "Pontica Solutions Ltd",
            "descriptions": [
                "Scheduled emails leveraging Akka and Apache Kafka",
                "Implemented email statistics using Apache Spark and Apache Kafka",
                "Ensured code correctness by combining functional programming and testing with ScalaTest and ScalaCheck",
                "Used AWS SQS to implement customer facing APIs"
            ]
        },
        {
            "from": "January 2020",
            "to": "March 2022",
            "jobTitle": "Software Developer",
            "location": "Coursera",
            "descriptions": [
                "Developed rhyme.com, an in-browser interactive studying VM environment, complete with audio/video calls and video instructions",
                "Implemented video transcriptions with AWS Transcribe",
                "Worked with React, Redux, Typescript, PostgreSQL and Golang",
                "Introduced property-based testing, published typescript definitions for untyped libraries, set up code coverage and automated dependency updates"
            ]
        },
        {
            "from": "March 2022",
            "to": "November 2022",
            "jobTitle": "Full-Stack Developer",
            "location": "Synthesis",
            "descriptions": [
                "Worked on portal.synthesis.is with nextjs, typeorm, mysql, zod and react-query",
                "Optimized typeorm/mysql queries, modified indexes and constraints, migrated table schemas to improve performance and maintainability",
                "Sped up CI runtime from 13 to 3 mins using sharding, parallel db testing and job splitting",
                "Introduced strongly-typed middleware for authentication and validation to improve security"
            ]
        }
    ],
    "languages": [
        {
            "languageName": "English",
            "level": "Proficient"
        },
        {
            "languageName": "German",
            "level": "Advanced"
        }
    ],
    "educations": [
        {
            "educationTitle": "Web Development",
            "location": "Telerik Academy",
            "from": "January 2015",
            "to": "March 2016",
            "certificateUrl": ["https://telerikacademy.com/Certificates/View/1980/6b7b6f44"],
            "linkText": ["telerikacademy.com/1980/6b7b6f44"]
        },
        {
            "educationTitle": "Bachelor in Software Engineering (not completed)",
            "location": "FMI, Sofia University 'St. Kliment Ohridski'",
            "from": "October 2013",
            "to": "January 2015"
        }
    ],
    "projects": [
        {
            "title": "AoC 2022",
            "description": "How I fell in love with Rust while blasting some algorithms (Advent of Code 2022 solutions).",
            "links": [
                {
                    "url": "https://github.com/KonstantinSimeonov/aoc2o22"
                }
            ],
            "priority": 20
        },
        {
            "title": "tsx-ctrl-statements",
            "description": "Typescript compiler plugin that adds control flow elements to jsx.",
            "links": [
                {
                    "url": "https://github.com/KonstantinSimeonov/tsx-control-statements"
                }
            ],
            "priority": 5
        },
        {
            "title": "tsfck",
            "description": "Pure compile-time implementation of various fun programs (fibs, primes, string ops) using typescript type language.",
            "links": [
                {
                    "url": "https://github.com/KonstantinSimeonov/tsfck"
                }
            ],
            "priority": 15
        },
        {
            "title": "guacamole-client types",
            "description": "Typescript library definitions for apache guacamole-client library which is used at Coursera.",
            "links": [
                {
                    "url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/45949"
                }
            ],
            "priority": 10
        }
    ],
    "skills": [
        {
            "name": "Algorithms",
            "description": "I've always had a lot of fun implementing various data structures and solving competetive programming problems - take a look at my github if you haven't done so already!",
            "priority": 6,
            "img_url": "Algo"
        },
        {
            "name": "Typescript",
            "description": "I've used Javascript/Typescript in my jobs at TelerikAcademy, ChaosGroup, Rhyme and Synthesis to build interactive user interfaces, single page applications, backend services, automated builds and tests processes.",
            "priority": 2,
            "img_url": "TS"
        },
        {
            "name": "NodeJS",
            "description": "Node is the backend platform I feel most comfortable with - I love the opportunity to reuse code between frontend and backend, the abundance of libraries and the ease of prototyping. I've been using Node to build apps with Express, NextJS and Electron.",
            "priority": 1,
            "img_url": "Node"
        },
        {
            "name": "Mentoring",
            "description": "Mentoring is a natural part of working in a team - I had the opportunity to mentor a lot of students as a teacher in TelerikAcademy and that helped me later successfully mentor fresh team members in Coursera and Synthesis. I'm also mentoring several people outside of work - check out https://latrovaliev.dev/, he's my best student!",
            "priority": 4,
            "img_url": "Mentor"
        },
        {
            "name": "FP",
            "description": "FP can provide amazing benefits (immutability, pure functions, abstraction via monads/functions/composition) in the right circumstances - I've had a blast leveraging the strong sides of FP with Haskell/Typescript/Scala in a variety of situations like automation, restful APIs, front-end development and testing.",
            "img_url": "Haskell"
        },
        {
            "name": "Linux/bash",
            "description": "I've used Fedora/Gentoo/Arch since my first year as a developer. I'm using bash loops, pipes, streams and command line tools like grep, cat, sed, rsync, ssh, less and other to make life simpler. Can't live without a terminal anymore!",
            "img_url": "Linux"
        },
        {
            "name": "SQL",
            "description": "Building projects like editable video transcriptions (Coursera), 3d material store (ChaosGroup), student system with different roles, user search, event scheduling (Synthesis) made me appreciate how powerful and fun, yet also frustrating and complex relational databases/SQL can be.",
            "img_url": "SQL"
        },
        {
            "name": "React",
            "description": "I've been using React for 7 (at TelerikAcademy, ChaosGroup, Coursera, Synthesis) years and I love what it offers - reusable components/hooks, terse and declarative code, comprehensible UI state management and reasonable performance.",
            "priority": -1,
            "img_url": "React"
        },
        {
            "name": "git",
            "description": "Feature branches, rebasing, reflog, partial checkouts/stages, stashing - git is awesome, easily the best vcs for most software projects.",
            "img_url": "Git"
        },
        {
            "name": "OOP",
            "description": "Before I became a functional programming hipster, I've explored OOP concepts (through working with C#, JS and Scala) such as class/prototypal inheritance, object composition, polymorphism and encapsulation. I also became familiar with design patterns such as decorators, chain of responsibility, command pattern, composite objects, factories and mediators.",
            "priority": 9,
            "img_url": "Oop"
        }
    ]
}
